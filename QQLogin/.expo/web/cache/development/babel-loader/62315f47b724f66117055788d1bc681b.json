{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\Duryan\\\\Quick_Quack_Login\\\\screens\\\\Signup.js\";\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { useFonts } from 'expo-font';\nimport { Formik } from 'formik';\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, StyledInputLabel, StyledTextInput, StyledButton, RightIcon, Colors, ButtonText, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent, ExtraViewRight } from \"./../components/styles\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingWrapper from \"../components/KBWrapper\";\nvar primary = Colors.primary,\n    yellow = Colors.yellow,\n    background = Colors.background,\n    lightgray = Colors.lightgray,\n    darkgray = Colors.darkgray,\n    black = Colors.black;\n\nvar Signup = function Signup() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      agree = _useState4[0],\n      setAgree = _useState4[1];\n\n  var checkboxHandler = function checkboxHandler() {\n    setAgree(!agree);\n  };\n\n  var btnHandler = function btnHandler() {\n    alert('pog');\n  };\n\n  return React.createElement(KeyboardAvoidingWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(StyledContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(InnerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(PageTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), React.createElement(SubTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"    \", React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"agree\",\n    onChange: checkboxHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), React.createElement(\"label\", {\n    htmlFor: \"agree\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \" I agree to \", React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 46\n    }\n  }, \"terms and conditions\"))), React.createElement(\"button\", {\n    disabled: !agree,\n    className: \"btn\",\n    onClick: btnHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Continue\")))), React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values;\n    return React.createElement(StyledFormArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Name\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('name'),\n      onBlur: handleBlur('name'),\n      value: values.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Institution Email\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Password\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), React.createElement(MsgBox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"...\"), React.createElement(StyledButton, {\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, \"Sign Up\")), React.createElement(Line, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), React.createElement(ExtraView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, React.createElement(ExtraText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }), React.createElement(TextLink, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, React.createElement(TextLinkContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, \"Forgot Your Password?\"))), React.createElement(ExtraViewRight, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, React.createElement(TextLink, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, React.createElement(TextLinkContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Login\"))));\n  }))));\n};\n\nvar MyTextInput = function MyTextInput(_ref2) {\n  var label = _ref2.label,\n      icon = _ref2.icon,\n      isPassword = _ref2.isPassword,\n      hidePassword = _ref2.hidePassword,\n      setHidePassword = _ref2.setHidePassword,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, React.createElement(LeftIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, React.createElement(Octicons, {\n    name: icon,\n    size: 30,\n    color: yellow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })), React.createElement(StyledInputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, \" \", label, \" \"), React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  })), isPassword && React.createElement(RightIcon, {\n    onPress: function onPress() {\n      return setHidePassword(!hidePassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: hidePassword ? 'md-eye-off' : 'md-eye',\n    size: 30,\n    color: darkgray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/Nick/Desktop/Duryan/Quick_Quack_Login/screens/Signup.js"],"names":["React","useState","StatusBar","useFonts","Formik","Octicons","Ionicons","Fontisto","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","StyledInputLabel","StyledTextInput","StyledButton","RightIcon","Colors","ButtonText","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","ExtraViewRight","KeyboardAvoidingWrapper","primary","yellow","background","lightgray","darkgray","black","Signup","hidePassword","setHidePassword","agree","setAgree","checkboxHandler","btnHandler","alert","name","email","password","values","console","log","handleChange","handleBlur","handleSubmit","MyTextInput","label","icon","isPassword","props"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { useFonts } from 'expo-font';\r\n//formik\r\nimport { Formik } from 'formik';\r\n\r\n//icons\r\n\r\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\r\n\r\nimport {\r\n  StyledContainer,\r\n  InnerContainer,\r\n  PageLogo,\r\n  PageTitle,\r\n  SubTitle,\r\n  StyledFormArea,\r\n  LeftIcon,\r\n  StyledInputLabel,\r\n  StyledTextInput,\r\n  StyledButton,\r\n  RightIcon,\r\n  Colors,\r\n  ButtonText,\r\n  MsgBox,\r\n  Line,\r\n  ExtraView,\r\n  ExtraText,\r\n  TextLink,\r\n  TextLinkContent,\r\n  ExtraViewRight,\r\n} from './../components/styles';\r\n\r\nimport { Button, View } from 'react-native';\r\nimport KeyboardAvoidingWrapper from '../components/KBWrapper';\r\n\r\n//colors\r\nconst { primary, yellow, background, lightgray, darkgray, black } = Colors;\r\nconst Signup = () => {\r\n  const [hidePassword, setHidePassword] = useState(true);\r\n\r\n  const [agree, setAgree] = useState(false);\r\n\r\n  const checkboxHandler = () => {\r\n    setAgree(!agree);\r\n  };\r\n  const btnHandler = () => {\r\n    alert('pog');\r\n  };\r\n\r\n  /*\r\n    const [loaded] = useFonts({\r\n        Inter: require('./../assets/fonts/Inter.ttf'),\r\n      });\r\n      */\r\n  return (\r\n    <KeyboardAvoidingWrapper>\r\n      <StyledContainer>\r\n        <StatusBar style=\"black\" />\r\n        <InnerContainer>\r\n          {/* <PageLogo resizeMode = 'contain' source={require('./../assets/login.png')} />\r\n           */}\r\n          <PageTitle>Sign Up</PageTitle>\r\n\r\n          <SubTitle>    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div>\r\n          <input type=\"checkbox\" id=\"agree\" onChange={checkboxHandler} />\r\n          <label htmlFor=\"agree\"> I agree to <b>terms and conditions</b></label>\r\n        </div>\r\n\r\n        {/* Don't miss the exclamation mark* */}\r\n        <button disabled={!agree} className=\"btn\" onClick={btnHandler}>\r\n          Continue\r\n        </button>\r\n      </div>\r\n    </div>\r\n</SubTitle>\r\n          <Formik\r\n            initialValues={{ name: '', email: '', password: '' }}\r\n            onSubmit={(values) => {\r\n              console.log(values);\r\n            }}\r\n          >\r\n            {({ handleChange, handleBlur, handleSubmit, values }) => (\r\n              <StyledFormArea>\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Name\"\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('name')}\r\n                  onBlur={handleBlur('name')}\r\n                  value={values.name}\r\n                />\r\n\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Institution Email\"\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('email')}\r\n                  onBlur={handleBlur('email')}\r\n                  value={values.email}\r\n                  keyboardType=\"email-address\"\r\n                />\r\n\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Password\"\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('password')}\r\n                  onBlur={handleBlur('password')}\r\n                  value={values.password}\r\n                  secureTextEntry={hidePassword}\r\n                  isPassword={true}\r\n                  hidePassword={hidePassword}\r\n                  setHidePassword={setHidePassword}\r\n                />\r\n\r\n                <MsgBox>...</MsgBox>\r\n\r\n                <StyledButton onPress={handleSubmit}>\r\n                  <ButtonText>Sign Up</ButtonText>\r\n                </StyledButton>\r\n                <Line />\r\n\r\n                <ExtraView>\r\n                  <ExtraText></ExtraText>\r\n                  <TextLink>\r\n                    <TextLinkContent>Forgot Your Password?</TextLinkContent>\r\n                  </TextLink>\r\n                </ExtraView>\r\n                <ExtraViewRight>\r\n                  <TextLink>\r\n                    <TextLinkContent>Login</TextLinkContent>\r\n                  </TextLink>\r\n                </ExtraViewRight>\r\n              </StyledFormArea>\r\n              \r\n            )}\r\n            \r\n          </Formik>\r\n        </InnerContainer>\r\n      </StyledContainer>\r\n    </KeyboardAvoidingWrapper>\r\n  );\r\n};\r\n\r\nconst MyTextInput = ({ label, icon, isPassword, hidePassword, setHidePassword, ...props }) => {\r\n  return (\r\n    <View>\r\n      <LeftIcon>\r\n        <Octicons name={icon} size={30} color={yellow} />\r\n      </LeftIcon>\r\n      <StyledInputLabel> {label} </StyledInputLabel>\r\n      <StyledTextInput {...props} />\r\n      {isPassword && (\r\n        <RightIcon onPress={() => setHidePassword(!hidePassword)}>\r\n          <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size={30} color={darkgray} />\r\n        </RightIcon>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}