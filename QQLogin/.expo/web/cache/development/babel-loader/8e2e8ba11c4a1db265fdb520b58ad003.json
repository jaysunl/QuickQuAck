{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Documents\\\\GitHub\\\\quickquack\\\\QQLogin\\\\screens\\\\PostView.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { serverIp } from \"./Login.js\";\nvar JWTtoken = '';\nimport { Formik, Field, Form } from 'formik';\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, StyledInputLabel, StyledTextInput, StyledButton, RightIcon, Colors, ButtonText, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent, ExtraViewRight } from \"./../components/styles\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingWrapper from \"../components/KBWrapper\";\nvar primary = Colors.primary,\n    yellow = Colors.yellow,\n    background = Colors.background,\n    lightgray = Colors.lightgray,\n    darkgray = Colors.darkgray,\n    black = Colors.black;\n\nvar PostView = function PostView(_ref) {\n  var navigation = _ref.navigation;\n\n  var getJWT = function getJWT() {\n    return _regeneratorRuntime.async(function getJWT$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token').then(function (token) {\n              JWTtoken = token;\n            }));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0.message);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var sendToDB = function sendToDB(body) {\n    var operation, response, parseRes, _response, _parseRes;\n\n    return _regeneratorRuntime.async(function sendToDB$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            operation = 'update';\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(getJWT());\n\n          case 4:\n            if (!(operation === 'update')) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(fetch('http://' + serverIp + ':5000/feed/update-post', {\n              method: 'PUT',\n              headers: {\n                token: JWTtoken\n              },\n              body: JSON.stringify(body)\n            }));\n\n          case 7:\n            response = _context2.sent;\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(response.text());\n\n          case 10:\n            parseRes = _context2.sent;\n            console.log(parseRes);\n\n          case 12:\n            if (!(operation === 'delete')) {\n              _context2.next = 20;\n              break;\n            }\n\n            _context2.next = 15;\n            return _regeneratorRuntime.awrap(fetch('http://' + serverIp + ':5000/feed/delete-post', {\n              method: 'DELETE',\n              headers: {\n                token: JWTtoken\n              },\n              body: JSON.stringify(body)\n            }));\n\n          case 15:\n            _response = _context2.sent;\n            _context2.next = 18;\n            return _regeneratorRuntime.awrap(_response.text());\n\n          case 18:\n            _parseRes = _context2.sent;\n            console.log(_parseRes);\n\n          case 20:\n            _context2.next = 25;\n            break;\n\n          case 22:\n            _context2.prev = 22;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0.message);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 22]], Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, React.createElement(StyledContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), React.createElement(InnerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, React.createElement(PageTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Post View\"), React.createElement(SubTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      postText: '',\n      postId: ''\n    },\n    onSubmit: function onSubmit(values) {\n      body = {\n        postText: 'Title: ' + values.postText + 'Content: ' + values.postTitle,\n        postId: values.postId\n      };\n      sendToDB(body);\n      navigation.navigate('CreatePost');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values;\n    return React.createElement(StyledFormArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Post Title\",\n      style: {},\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('postTitle'),\n      onBlur: handleBlur('postTitle'),\n      value: values.postTitle,\n      selectionColor: \"#FFCC15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Post Text\",\n      style: {},\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('postText'),\n      onBlur: handleBlur('postText'),\n      value: values.postText,\n      selectionColor: \"#FFCC15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Post Id\",\n      style: {},\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('postId'),\n      onBlur: handleBlur('postId'),\n      value: values.postId,\n      selectionColor: \"#FFCC15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }), React.createElement(StyledButton, {\n      onPress: (function (event) {\n        return setOpt(event, UPDATE);\n      }, handleSubmit),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, \"Update Post\")), React.createElement(StyledButton, {\n      onPress: function onPress() {\n        return navigation.navigate('CreatePost');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, \"Back\")), React.createElement(StyledButton, {\n      onPress: (function (event) {\n        return setOpt(event, DELETE);\n      }, handleSubmit),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"Delete Post\")), React.createElement(Line, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }));\n  }))));\n};\n\nvar MyTextInput = function MyTextInput(_ref3) {\n  var label = _ref3.label,\n      icon = _ref3.icon,\n      isPassword = _ref3.isPassword,\n      hidePassword = _ref3.hidePassword,\n      setHidePassword = _ref3.setHidePassword,\n      props = _objectWithoutProperties(_ref3, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, React.createElement(StyledInputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, \" \", label, \" \"), React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  })), isPassword && React.createElement(RightIcon, {\n    onPress: function onPress() {\n      setHidePassword(!hidePassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: hidePassword ? 'md-eye-off' : 'md-eye',\n    size: 30,\n    color: darkgray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default PostView;","map":{"version":3,"sources":["C:/Users/Nick/Documents/GitHub/quickquack/QQLogin/screens/PostView.js"],"names":["React","useState","StatusBar","AsyncStorage","serverIp","JWTtoken","Formik","Field","Form","Octicons","Ionicons","Fontisto","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","StyledInputLabel","StyledTextInput","StyledButton","RightIcon","Colors","ButtonText","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","ExtraViewRight","KeyboardAvoidingWrapper","primary","yellow","background","lightgray","darkgray","black","PostView","navigation","getJWT","getItem","then","token","console","error","message","sendToDB","body","operation","fetch","method","headers","JSON","stringify","response","text","parseRes","log","postText","postId","values","postTitle","navigate","handleChange","handleBlur","handleSubmit","event","setOpt","UPDATE","DELETE","MyTextInput","label","icon","isPassword","hidePassword","setHidePassword","props"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n//Testing purposes, change serverIP in login.js to your local IPV4 address\r\nimport { serverIp } from './Login.js';\r\n\r\n//used for testing, hardcoded token value\r\nvar JWTtoken = '';\r\n\r\n//formik\r\nimport { Formik, Field, Form } from 'formik';\r\n\r\n//icons\r\n\r\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\r\n\r\nimport {\r\n  StyledContainer,\r\n  InnerContainer,\r\n  PageLogo,\r\n  PageTitle,\r\n  SubTitle,\r\n  StyledFormArea,\r\n  LeftIcon,\r\n  StyledInputLabel,\r\n  StyledTextInput,\r\n  StyledButton,\r\n  RightIcon,\r\n  Colors,\r\n  ButtonText,\r\n  MsgBox,\r\n  Line,\r\n  ExtraView,\r\n  ExtraText,\r\n  TextLink,\r\n  TextLinkContent,\r\n  ExtraViewRight,\r\n} from './../components/styles';\r\n\r\nimport { Button, View } from 'react-native';\r\nimport KeyboardAvoidingWrapper from '../components/KBWrapper';\r\n\r\n//colors\r\nconst { primary, yellow, background, lightgray, darkgray, black } = Colors;\r\n\r\nconst PostView = ({ navigation }) => {\r\n  const getJWT = async () => {\r\n    try {\r\n      await AsyncStorage.getItem('token').then((token) => {\r\n        //console.log('Retrieved Token: ' + token);\r\n        JWTtoken = token;\r\n      });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n  //communicate registration information with the database\r\n\r\n  const sendToDB = async (body) => {\r\n    try {\r\n      const operation = 'update';\r\n      await getJWT();\r\n      if (operation === 'update') {\r\n        // Update server with user's registration information\r\n        const response = await fetch('http://' + serverIp + ':5000/feed/update-post', {\r\n          method: 'PUT',\r\n          headers: { token: JWTtoken },\r\n          body: JSON.stringify(body),\r\n        });\r\n\r\n        const parseRes = await response.text();\r\n\r\n        console.log(parseRes);\r\n      }\r\n\r\n      if (operation === 'delete') {\r\n        // Update server with user's registration information\r\n        const response = await fetch('http://' + serverIp + ':5000/feed/delete-post', {\r\n          method: 'DELETE',\r\n          headers: { token: JWTtoken },\r\n          body: JSON.stringify(body),\r\n        });\r\n\r\n        const parseRes = await response.text();\r\n\r\n        console.log(parseRes);\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingWrapper>\r\n      <StyledContainer>\r\n        <StatusBar style=\"black\" />\r\n        <InnerContainer>\r\n          <PageTitle>Post View</PageTitle>\r\n\r\n          <SubTitle></SubTitle>\r\n          <Formik\r\n            initialValues={{\r\n              postText: '',\r\n              postId: '',\r\n            }}\r\n            onSubmit={(values) => {\r\n              //Setting up information to send to database\r\n              body = {\r\n                postText: 'Title: ' + values.postText + 'Content: ' + values.postTitle,\r\n                postId: values.postId,\r\n              };\r\n\r\n              sendToDB(body);\r\n              navigation.navigate('CreatePost');\r\n            }}\r\n          >\r\n            {({ handleChange, handleBlur, handleSubmit, values }) => (\r\n              <StyledFormArea>\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Post Title\"\r\n                  style={{}}\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('postTitle')}\r\n                  onBlur={handleBlur('postTitle')}\r\n                  value={values.postTitle}\r\n                  selectionColor=\"#FFCC15\"\r\n                />\r\n\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Post Text\"\r\n                  style={{}}\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('postText')}\r\n                  onBlur={handleBlur('postText')}\r\n                  value={values.postText}\r\n                  selectionColor=\"#FFCC15\"\r\n                />\r\n\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Post Id\"\r\n                  style={{}}\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('postId')}\r\n                  onBlur={handleBlur('postId')}\r\n                  value={values.postId}\r\n                  selectionColor=\"#FFCC15\"\r\n                />\r\n\r\n                <StyledButton onPress={((event) => setOpt(event, UPDATE), handleSubmit)}>\r\n                  <ButtonText>Update Post</ButtonText>\r\n                </StyledButton>\r\n                <StyledButton onPress={() => navigation.navigate('CreatePost')}>\r\n                  <ButtonText>Back</ButtonText>\r\n                </StyledButton>\r\n                <StyledButton onPress={((event) => setOpt(event, DELETE), handleSubmit)}>\r\n                  <ButtonText>Delete Post</ButtonText>\r\n                </StyledButton>\r\n                <Line />\r\n              </StyledFormArea>\r\n            )}\r\n          </Formik>\r\n        </InnerContainer>\r\n      </StyledContainer>\r\n    </KeyboardAvoidingWrapper>\r\n  );\r\n};\r\n\r\nconst MyTextInput = ({ label, icon, isPassword, hidePassword, setHidePassword, ...props }) => {\r\n  return (\r\n    <View>\r\n      <StyledInputLabel> {label} </StyledInputLabel>\r\n      <StyledTextInput {...props} />\r\n      {isPassword && (\r\n        <RightIcon\r\n          onPress={() => {\r\n            setHidePassword(!hidePassword);\r\n          }}\r\n        >\r\n          <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size={30} color={darkgray} />\r\n        </RightIcon>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PostView;\r\n"]},"metadata":{},"sourceType":"module"}