{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Nick\\\\Desktop\\\\Duryan\\\\Quick_Quack_Login\\\\screens\\\\Signup.js\";\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { useFonts } from 'expo-font';\nimport { Formik } from 'formik';\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, StyledInputLabel, StyledTextInput, StyledButton, RightIcon, Colors, ButtonText, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent, ExtraViewRight } from \"./../components/styles\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingWrapper from \"../components/KBWrapper\";\nvar primary = Colors.primary,\n    yellow = Colors.yellow,\n    background = Colors.background,\n    lightgray = Colors.lightgray,\n    darkgray = Colors.darkgray,\n    black = Colors.black;\n\nvar Signup = function Signup() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      agree = _useState4[0],\n      setAgree = _useState4[1];\n\n  var checkboxHandler = function checkboxHandler() {\n    setAgree(!agree);\n  };\n\n  var btnHandler = function btnHandler() {\n    alert('pog');\n  };\n\n  return React.createElement(KeyboardAvoidingWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 34\n    }\n  }, React.createElement(StatusBar, {\n    style: \"yellow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(InnerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(PageTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), React.createElement(SubTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values;\n    return React.createElement(StyledFormArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Name\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('name'),\n      onBlur: handleBlur('name'),\n      value: values.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Institution Email\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Password\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Password\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }), React.createElement(MsgBox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"...\"), React.createElement(StyledButton, {\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, \"Sign Up\")), React.createElement(Line, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }), React.createElement(ExtraView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, React.createElement(ExtraText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }), React.createElement(TextLink, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, React.createElement(TextLinkContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, \"Forgot Your Password?\"))), React.createElement(ExtraViewRight, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, React.createElement(TextLink, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, React.createElement(TextLinkContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, \"Login\"))));\n  }), React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"agree\",\n    onChange: checkboxHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }), \"/\"), React.createElement(\"button\", {\n    disabled: !agree,\n    onClick: btnHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Continue\")))));\n};\n\nvar MyTextInput = function MyTextInput(_ref2) {\n  var label = _ref2.label,\n      icon = _ref2.icon,\n      isPassword = _ref2.isPassword,\n      hidePassword = _ref2.hidePassword,\n      setHidePassword = _ref2.setHidePassword,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, React.createElement(LeftIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, React.createElement(Octicons, {\n    name: icon,\n    size: 30,\n    color: yellow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  })), React.createElement(StyledInputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \" \", label, \" \"), React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  })), isPassword && React.createElement(RightIcon, {\n    onPress: function onPress() {\n      return setHidePassword(!hidePassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: hidePassword ? 'md-eye-off' : 'md-eye',\n    size: 30,\n    color: darkgray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/Nick/Desktop/Duryan/Quick_Quack_Login/screens/Signup.js"],"names":["React","useState","StatusBar","useFonts","Formik","Octicons","Ionicons","Fontisto","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","StyledInputLabel","StyledTextInput","StyledButton","RightIcon","Colors","ButtonText","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","ExtraViewRight","KeyboardAvoidingWrapper","primary","yellow","background","lightgray","darkgray","black","Signup","hidePassword","setHidePassword","agree","setAgree","checkboxHandler","btnHandler","alert","name","email","password","values","console","log","handleChange","handleBlur","handleSubmit","MyTextInput","label","icon","isPassword","props"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { useFonts } from 'expo-font';\r\n//formik\r\nimport {Formik} from 'formik';\r\n\r\n//icons\r\n\r\nimport {Octicons, Ionicons, Fontisto} from '@expo/vector-icons';\r\n\r\nimport {\r\n    StyledContainer,\r\n    InnerContainer,\r\n    PageLogo,\r\n    PageTitle,\r\n    SubTitle,\r\n    StyledFormArea,\r\n    LeftIcon,\r\n    StyledInputLabel,\r\n    StyledTextInput,\r\n    StyledButton,\r\n    RightIcon,\r\n    Colors,\r\n    ButtonText,\r\n    MsgBox,\r\n    Line,\r\n    ExtraView,\r\n    ExtraText, \r\n    TextLink,\r\n    TextLinkContent,\r\n    ExtraViewRight\r\n    \r\n} from './../components/styles';\r\n\r\nimport {Button, View} from 'react-native';\r\nimport KeyboardAvoidingWrapper from '../components/KBWrapper';\r\n\r\n//colors\r\nconst {primary, yellow, background, lightgray, darkgray, black } = Colors;\r\nconst Signup = () => {\r\n    const [hidePassword, setHidePassword] = useState(true);\r\n\r\n    const [agree, setAgree] = useState(false);\r\n\r\n    const checkboxHandler = () => {\r\n        setAgree(!agree);\r\n    }\r\n    const btnHandler = () => {\r\n        alert('pog');\r\n    };\r\n\r\n    /*\r\n    const [loaded] = useFonts({\r\n        Inter: require('./../assets/fonts/Inter.ttf'),\r\n      });\r\n      */\r\n    return (\r\n        \r\n        <KeyboardAvoidingWrapper><StyledContainer>\r\n            <StatusBar style = \"yellow\" />\r\n            <InnerContainer>\r\n                {/* <PageLogo resizeMode = 'contain' source={require('./../assets/login.png')} />\r\n                */}\r\n                <PageTitle>Sign Up</PageTitle>\r\n                \r\n                <SubTitle></SubTitle>\r\n                \r\n                <Formik\r\n                    initialValues={{name: '', email: '', password: ''}}\r\n                    onSubmit={(values) => {\r\n                        console.log(values);\r\n                    }}\r\n\r\n                >\r\n                    {({handleChange, handleBlur, handleSubmit, values}) => (\r\n                    <StyledFormArea>\r\n                        <MyTextInput\r\n                            label = \"\"\r\n                            icon=\"\"\r\n                            placeholder =\"Name\"\r\n                            placeholderTextColor={darkgray}\r\n                            onChangeText={handleChange('name')}\r\n                            onBlur={handleBlur('name')}\r\n                            value={values.name}\r\n                        />\r\n                        \r\n                        <MyTextInput\r\n                            label = \"\"\r\n                            icon=\"\"\r\n                            placeholder =\"Institution Email\"\r\n                            placeholderTextColor={darkgray}\r\n                            onChangeText={handleChange('email')}\r\n                            onBlur={handleBlur('email')}\r\n                            value={values.email}\r\n                            keyboardType=\"email-address\"\r\n                        />\r\n\r\n                        <MyTextInput\r\n                            label = \"\"\r\n                            icon=\"\"\r\n                            placeholder =\"Password\"\r\n                            placeholderTextColor={darkgray}\r\n                            onChangeText={handleChange('password')}\r\n                            onBlur={handleBlur('password')}\r\n                            value={values.password}\r\n                            secureTextEntry={hidePassword}\r\n                            isPassword={true}\r\n                            hidePassword={hidePassword}\r\n                            setHidePassword={setHidePassword}\r\n                        />\r\n                        <MyTextInput\r\n                            label = \"\"\r\n                            icon=\"\"\r\n                            placeholder =\"Password\"\r\n                            placeholderTextColor={darkgray}\r\n                            onChangeText={handleChange('password')}\r\n                            onBlur={handleBlur('password')}\r\n                            value={values.password}\r\n                            secureTextEntry={hidePassword}\r\n                            isPassword={true}\r\n                            hidePassword={hidePassword}\r\n                            setHidePassword={setHidePassword}\r\n                        />\r\n\r\n                        <MsgBox>...</MsgBox>\r\n                        <StyledButton onPress={handleSubmit}>\r\n                            <ButtonText>\r\n                                Sign Up\r\n                            </ButtonText>\r\n                        </StyledButton>\r\n                        <Line />\r\n                        \r\n                        <ExtraView>\r\n                            <ExtraText></ExtraText>\r\n                            <TextLink>\r\n                                <TextLinkContent>Forgot Your Password?</TextLinkContent>\r\n                            </TextLink>\r\n                        </ExtraView>\r\n                        <ExtraViewRight>\r\n                            <TextLink>\r\n                                <TextLinkContent>Login</TextLinkContent>\r\n                            </TextLink>\r\n                        </ExtraViewRight>\r\n                        \r\n                    </StyledFormArea>\r\n                )}\r\n\r\n                </Formik>\r\n                <div>\r\n        <div>\r\n          <input type=\"checkbox\" id=\"agree\" onChange={checkboxHandler} />\r\n   /\r\n        </div>\r\n\r\n        {/* Don't miss the exclamation mark* */}\r\n        <button disabled={!agree} onClick={btnHandler}>\r\n          Continue\r\n        </button>\r\n      </div>\r\n            </InnerContainer>\r\n        </StyledContainer></KeyboardAvoidingWrapper>\r\n    );\r\n};\r\n\r\nconst MyTextInput = ({label, icon, isPassword, hidePassword, setHidePassword, ...props}) => {\r\n    return (\r\n        <View>\r\n            <LeftIcon>\r\n                <Octicons name={icon} size={30} color={yellow} />\r\n            </LeftIcon>\r\n            <StyledInputLabel> {label} </StyledInputLabel>\r\n            <StyledTextInput {...props} />\r\n            {isPassword && (\r\n                <RightIcon onPress={() => setHidePassword(!hidePassword)}>\r\n                    <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size  = {30} color={darkgray}/>\r\n                </RightIcon>\r\n            )}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}