{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\"];\n\nvar _this = this,\n    _jsxFileName = \"H:\\\\SDSC\\\\quickquack\\\\qqlogin\\\\screens\\\\Signup.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Formik, Field, Form } from 'formik';\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\nvar serverIp = \"localhost\";\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, StyledInputLabel, StyledTextInput, StyledButton, RightIcon, Colors, ButtonText, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent, ExtraViewRight } from \"./../components/styles\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingWrapper from \"../components/KBWrapper\";\nvar primary = Colors.primary,\n    yellow = Colors.yellow,\n    background = Colors.background,\n    lightgray = Colors.lightgray,\n    darkgray = Colors.darkgray,\n    black = Colors.black;\n\nvar Signup = function Signup(_ref) {\n  var navigation = _ref.navigation,\n      setAuth = _ref.setAuth;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      agree = _useState4[0],\n      setAgree = _useState4[1];\n\n  var sendToDB = function sendToDB(body) {\n    var response, parseRes;\n    return _regeneratorRuntime.async(function sendToDB$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(body);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"http://\" + serverIp + \":5000/auth/register\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(body)\n            }));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            parseRes = _context.sent;\n            console.log(parseRes);\n            localStorage.setItem(\"token\", parseRes.token);\n            setAuth(true);\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0.message);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 13]], Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(StyledContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(InnerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(PageTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), React.createElement(SubTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      toggle: false,\n      checked: [],\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      dob: '',\n      college: '',\n      gy: ''\n    },\n    onSubmit: function onSubmit(values) {\n      body = {\n        firstName: values.firstName,\n        lastName: values.lastName,\n        email: values.email,\n        password: values.password,\n        dob: values.dob,\n        college: values.college,\n        gy: values.gy\n      };\n      sendToDB(body);\n      navigation.navigate('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values;\n    return React.createElement(StyledFormArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"First Name\",\n      style: {},\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('firstName'),\n      onBlur: handleBlur('firstName'),\n      value: values.firstName,\n      selectionColor: \"#FFCC15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Last Name\",\n      style: {},\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('lastName'),\n      onBlur: handleBlur('lastName'),\n      value: values.lastName,\n      selectionColor: \"#FFCC15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Institution Email\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      keyboardType: \"email-address\",\n      selectionColor: \"#FFCC15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Password\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      selectionColor: \"#FFCC15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Date of Birth\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('dob'),\n      onBlur: handleBlur('dob'),\n      value: values.dob,\n      selectionColor: \"#FFCC15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"College\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('college'),\n      onBlur: handleBlur('college'),\n      value: values.college,\n      selectionColor: \"#FFCC15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      label: \"\",\n      icon: \"\",\n      placeholder: \"Graduation Year\",\n      placeholderTextColor: darkgray,\n      onChangeText: handleChange('gy'),\n      onBlur: handleBlur('gy'),\n      value: values.gy,\n      selectionColor: \"#FFCC15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }), React.createElement(MsgBox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, \"By clicking Sign Up, you agree to Quick QuAck's Terms & Conditions.\"), React.createElement(StyledButton, {\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, \"Sign Up\")), React.createElement(Line, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }));\n  }))));\n};\n\nvar MyTextInput = function MyTextInput(_ref3) {\n  var label = _ref3.label,\n      icon = _ref3.icon,\n      isPassword = _ref3.isPassword,\n      hidePassword = _ref3.hidePassword,\n      setHidePassword = _ref3.setHidePassword,\n      props = _objectWithoutProperties(_ref3, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, React.createElement(StyledInputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, \" \", label, \" \"), React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  })), isPassword && React.createElement(RightIcon, {\n    onPress: function onPress() {\n      return setHidePassword(!hidePassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: hidePassword ? 'md-eye-off' : 'md-eye',\n    size: 30,\n    color: darkgray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Signup;","map":{"version":3,"sources":["H:/SDSC/quickquack/qqlogin/screens/Signup.js"],"names":["React","useState","StatusBar","Formik","Field","Form","Octicons","Ionicons","Fontisto","serverIp","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","StyledInputLabel","StyledTextInput","StyledButton","RightIcon","Colors","ButtonText","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","ExtraViewRight","KeyboardAvoidingWrapper","primary","yellow","background","lightgray","darkgray","black","Signup","navigation","setAuth","hidePassword","setHidePassword","agree","setAgree","sendToDB","body","console","log","fetch","method","headers","JSON","stringify","response","json","parseRes","localStorage","setItem","token","error","message","toggle","checked","firstName","lastName","email","password","dob","college","gy","values","navigate","handleChange","handleBlur","handleSubmit","MyTextInput","label","icon","isPassword","props"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\n//formik\r\nimport { Formik, Field, Form } from 'formik';\r\n\r\n//icons\r\n\r\nimport { Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\r\n\r\n//IP\r\nconst serverIp = \"localhost\";\r\n\r\nimport {\r\n  StyledContainer,\r\n  InnerContainer,\r\n  PageLogo,\r\n  PageTitle,\r\n  SubTitle,\r\n  StyledFormArea,\r\n  LeftIcon,\r\n  StyledInputLabel,\r\n  StyledTextInput,\r\n  StyledButton,\r\n  RightIcon,\r\n  Colors,\r\n  ButtonText,\r\n  MsgBox,\r\n  Line,\r\n  ExtraView,\r\n  ExtraText,\r\n  TextLink,\r\n  TextLinkContent,\r\n  ExtraViewRight,\r\n} from './../components/styles';\r\n\r\nimport { Button, View } from 'react-native';\r\nimport KeyboardAvoidingWrapper from '../components/KBWrapper';\r\n\r\n//colors\r\nconst { primary, yellow, background, lightgray, darkgray, black } = Colors;\r\n\r\nconst Signup = ({ navigation, setAuth }) => {\r\n  const [hidePassword, setHidePassword] = useState(true);\r\n  const [agree, setAgree] = useState(false);\r\n\r\n  //communicate registration information with the database\r\n  const sendToDB = async (body) => {\r\n\r\n    console.log(body);\r\n\r\n    try {\r\n      // Update server with user's registration information\r\n      const response = await fetch(\"http://\" + serverIp + \":5000/auth/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body)\r\n      });\r\n\r\n      //Token response from database\r\n      const parseRes = await response.json();\r\n      console.log(parseRes);\r\n\r\n      localStorage.setItem(\"token\", parseRes.token);\r\n      setAuth(true);\r\n\r\n      // possibly add if/else statement to determine if setAuth should be true or false\r\n\r\n    }\r\n    catch (error) {\r\n\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingWrapper>\r\n      <StyledContainer>\r\n        <StatusBar style=\"black\" />\r\n        <InnerContainer>\r\n          <PageTitle>Sign Up</PageTitle>\r\n\r\n          <SubTitle></SubTitle>\r\n          <Formik\r\n            initialValues={{\r\n              toggle: false,\r\n              checked: [],\r\n              firstName: '',\r\n              lastName: '',\r\n              email: '',\r\n              password: '',\r\n              dob: '',\r\n              college: '',\r\n              gy: '',\r\n            }}\r\n            onSubmit={(values) => {\r\n\r\n              //Setting up information to send to database\r\n              body = {\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                password: values.password,\r\n                dob: values.dob,\r\n                college: values.college,\r\n                gy: values.gy\r\n              };\r\n\r\n              sendToDB(body);\r\n              navigation.navigate('Login');\r\n            }}\r\n          >\r\n            {({ handleChange, handleBlur, handleSubmit, values }) => (\r\n              <StyledFormArea>\r\n                {/* might need to separate name into first and last name, add additional fields */}\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"First Name\"\r\n                  style={{}}\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('firstName')}\r\n                  onBlur={handleBlur('firstName')}\r\n                  value={values.firstName}\r\n                  selectionColor=\"#FFCC15\"\r\n                />\r\n\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Last Name\"\r\n                  style={{}}\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('lastName')}\r\n                  onBlur={handleBlur('lastName')}\r\n                  value={values.lastName}\r\n                  selectionColor=\"#FFCC15\"\r\n                />\r\n\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Institution Email\"\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('email')}\r\n                  onBlur={handleBlur('email')}\r\n                  value={values.email}\r\n                  keyboardType=\"email-address\"\r\n                  selectionColor=\"#FFCC15\"\r\n                />\r\n\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Password\"\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('password')}\r\n                  onBlur={handleBlur('password')}\r\n                  value={values.password}\r\n                  secureTextEntry={hidePassword}\r\n                  isPassword={true}\r\n                  hidePassword={hidePassword}\r\n                  setHidePassword={setHidePassword}\r\n                  selectionColor=\"#FFCC15\"\r\n                />\r\n\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Date of Birth\"\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('dob')}\r\n                  onBlur={handleBlur('dob')}\r\n                  value={values.dob}\r\n                  selectionColor=\"#FFCC15\"\r\n                />\r\n\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"College\"\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('college')}\r\n                  onBlur={handleBlur('college')}\r\n                  value={values.college}\r\n                  selectionColor=\"#FFCC15\"\r\n                />\r\n\r\n                <MyTextInput\r\n                  label=\"\"\r\n                  icon=\"\"\r\n                  placeholder=\"Graduation Year\"\r\n                  placeholderTextColor={darkgray}\r\n                  onChangeText={handleChange('gy')}\r\n                  onBlur={handleBlur('gy')}\r\n                  value={values.gy}\r\n                  selectionColor=\"#FFCC15\"\r\n                />\r\n\r\n                <MsgBox>By clicking Sign Up, you agree to Quick QuAck's Terms & Conditions.</MsgBox>\r\n\r\n                <StyledButton onPress={handleSubmit}>\r\n                  <ButtonText>Sign Up</ButtonText>\r\n                </StyledButton>\r\n                <Line />\r\n              </StyledFormArea>\r\n            )}\r\n          </Formik>\r\n        </InnerContainer>\r\n      </StyledContainer>\r\n    </KeyboardAvoidingWrapper>\r\n  );\r\n};\r\n\r\nconst MyTextInput = ({ label, icon, isPassword, hidePassword, setHidePassword, ...props }) => {\r\n  return (\r\n    <View>\r\n      <StyledInputLabel> {label} </StyledInputLabel>\r\n      <StyledTextInput {...props} />\r\n      {isPassword && (\r\n        <RightIcon onPress={() => setHidePassword(!hidePassword)}>\r\n          <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size={30} color={darkgray} />\r\n        </RightIcon>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}